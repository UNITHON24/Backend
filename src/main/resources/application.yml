spring:
  application:
    name: unithon
  config:
    import: optional:file:./.env.properties
  
  # File upload configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  
  # Database configuration
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:unithon}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    defer-datasource-initialization: true
  
  # SQL initialization
  sql:
    init:
      mode: ${SQL_INIT_MODE:always}

google:
  cloud:
    credentials:
      encoded-key: ${GCP_CREDENTIALS_ENCODED}

# Server configuration
server:
  port: ${SERVER_PORT:8080}

# Gemini API configuration
gemini:
  api:
    key: ${GEMINI_API_KEY}
    url: ${GEMINI_API_URL:https://generativelanguage.googleapis.com}
    path: ${GEMINI_API_PATH:/v1beta/models/gemini-1.5-flash:generateContent}

# Logging configuration
logging:
  level:
    com.example.unithon: ${LOG_LEVEL:DEBUG}
    org.springframework.web: ${WEB_LOG_LEVEL:DEBUG}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# 기능 플래그
feature:
  stt: true
  tts: true

# 매크로팀 연동 설정
macro:
  webhook:
    url: http://localhost:9999/api/orders #임시 url
